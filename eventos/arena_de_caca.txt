// .----------------------------------------------------------.
// .            SoulBlaker Scripts Apresenta:                 .
// .                ___________________                       .
// .               /   _____/\______   \                      .
// .               \_____  \  |    |  _/                      .
// .               /        \ |    |   \                      .
// .              /_______  / |______  /                      .
// .                      \/         \/                       .
// .            [ Cronus Advanced Scripts ]                   .
// .                                                    v1.1  .
// .----------------------------------------------------------.
// ;  http://forum.cronus-emulator.com/user/20800-soulblaker  ;
// .----------------------------------------------------------.
// . Script:                                                  .
// .  Arena de Caça                                           .
// .----------------------------------------------------------.
// . Por: SoulBlaker   Compátivel: Cronus       versão: 1.2   .
// .----------------------------------------------------------.
// . Descrição:                                               .
// .  Arena de Caça que invoca monstros que ao ser derrotados .
// .  dá pontos para ser trocado por itens.                   .
// .----------------------------------------------------------.
// . Changelog da Versão:                                     .
// .  * 1.0 [SoulBlaker]                                      .
// .	- Iniciado NPC.                                       .
// .  * 1.1 [SoulBlaker]                                      .
// .    - Corrigido a linha de tempo e menu de itens.         .
// .  * 1.2 [SoulBlaker]                                      .
// .    - Otimizações e estabilização no script.              .
// *----------------------------------------------------------*
prontera,147,171,5	script	Arena de Caça#hunter_01::HunterArena	727,{
	// Configurações dos itens de troca.
	setarray .@item_id[0], 501, 502;	// Id dos itens a ser trocado em array.
	setarray .@item_qt[0], 1, 1;		// Valor de pontos equivalente ao vetor do array que será trocado o item.
	
	set .@AdminLvl, 99;	// Nível de administração para ligar/desligar o evento.

	mes "^6A5ACD[Recepcionista]^000000";
	mes "Bem-vindo a Arena de Caça!";

	if( $@hunterarena_flag == 2 )
		mes "No momemento nossos portais estão fechado por estar ocorrendo uma Caçada neste momento.";

	mes "Mais em que posso te ajudar?";
	next;
	switch( select( ($@hunterarena_flag==1?"- Entrar na Arena.":""), "- Trocar pontos por item.", "- Sobre a Arena de Caça.", (getgmlevel()==.@AdminLvl?($@hunterarena_flag?"^FF0000- Desligar o Evento.^000000":"^FF0000- Ligar o Evento.^000000"):""), "^FF0000- Saír.^000000") )
	{
		case 1:
			if( $@hunterarena_flag != 1 )
			{
				mes "^6A5ACD[Recepcionista]^000000";
				mes "Me desculpe, mais a arena não está aberta.";
				mes "Volte mais tarde!";
				close;
			}

			mes "^6A5ACD[Recepcionista]^000000";
			mes "Tem certeza que deseja entrar na arena?";
			next;
			if( select("- Sim.", "- Não.") == 1 )
			{
				mes "^6A5ACD[Recepcionista]^000000";
				mes "Boa sorte, vou te mandar pra lá agora!";
				close2;
				warp "ordeal_1-2", 0, 0;
				end;
			}
			break;
		case 2:
			set .@m_1, 1;
			while( .@m_1 )
			{
				mes "^6A5ACD[Recepcionista]^000000";
				mes "Bom, escolha o item que deseja trocar por seus pontos.";
				mes "Lembrando que você tem " + hunterarena_points + " pontos!";
				next;

				set .@menu$, "";
				for( set .@i, 0; .@i < getarraysize(.@item_id); set .@i, .@i + 1 )
					set .@menu$, .@menu$ +"- " + getitemname(.@item_id[.@i]) + " [" + .@item_qt[.@i] + " pnts]:";

				set .@choose, select(.@menu$  + "^FF0000- Cancelar.^000000")-1;

				if( .@choose >= getarraysize(.@item_id) )
					set .@m_1, 0;
				else {
					mes "^6A5ACD[Recepcionista]^000000";
					mes "O item que você selecionou para uma possível troca foi o ^FF0000" + getitemname(.@item_id[.@choose]) + "^000000, correto?";
					next;
					switch( select("- Sim, continue.", "- Não, desejo trocar o item.", "- Cancelar negociação.") )
					{
						case 1:
							set .@m_2, 1;
							while( .@m_2 )
							{
								mes "^6A5ACD[Recepcionista]^000000";
								mes "Por quantos ^FF0000" + getitemname(.@item_id[.@choose]) + "^000000 você deseja trocar seus pontos?";
								mes "^FF0000Se não quiser mais nenhum, apenas digite 0.^000000";
								next;
								input .@amount;

								if( .@amount == 0 )
								{
									mes "^6A5ACD[Recepcionista]^000000";
									mes "Você não deseja mais trocar seus pontos pelo ^FF0000" + getitemname(.@item_id[.@choose]) + "^000000?";
									next;
									switch( select("- Sim, desejo trocar por outro item.", "- Não, deixa-me tentar novamente.", "^FF0000- Cancelar negociação.^000000" ) )
									{
										case 1:
											set .@m_2, 0;
											break;
										case 2:
											break;
										case 3:
											set .@m_1, 0;
											set .@m_2, 0;
											break;
									}
								}
								else if( hunterarena_points < (.@amount*.@item_qt[.@choose]) )
								{
									mes "^6A5ACD[Recepcionista]^000000";
									mes "Você não tem pontos suficiente para trocar por esta quantidade de item, tente novamente!";
									next;
								}
								else if( !checkweight(.@item_id[.@choose], .@amount) )
								{
									mes "^6A5ACD[Recepcionista]^000000";
									mes "Você não pode carregar todos esses itens, tente novamente!";
									next;
								}
								else {
									mes "^6A5ACD[Recepcionista]^000000";
									mes "Deseja trocar ^FF0000" + (.@amount*.@item_qt[.@choose]) + "^000000 pontos por ^FF0000" + .@amount + "x " + getitemname(.@item_id[.@choose]) + "^000000?";
									next;
									switch( select("- Sim, desejo trocar.", "- Não, desejo trocar o item.", "- Não, desejo trocar a quantidade.", "^FF0000- Cancelar negociação.^000000" ) )
									{
										case 1:
											getitem .@item_id[.@choose], .@amount;
											set hunterarena_points, hunterarena_points - (.@amount*.@item_qt[.@choose]);

											mes "^6A5ACD[Recepcionista]^000000";
											mes "Muito bem, aqui estão seus ^FF0000" + .@amount + "x " + getitemname(.@item_id[.@choose]) + "^000000.";
											next;
											set .@m_2, 0;
											break;
										case 2:
											set .@m_2, 0;
											break;
										case 3:
											break;
										case 4:
											set .@m_1, 0;
											set .@m_2, 0;
											break;
									}
								}
							}
							break;
						case 2:
							break;
						case 3:
							set .@m_1, 0;
							break;
					}
				}
			}
			break;
		case 3:
			mes "^6A5ACD[Recepcionista]^000000";
			mes "Você ganha pontos atribuidos pela classes do monstro que você matar na arena.";
			mes "Com esses pontos você pode trocar por diversos itens.";
			mes " ";
			mes "A arena é aberta pelos seguintes horários:";
			mes "^0000FF00:00AM^000000 - ^0000FF14:00PM^000000";
			mes "^0000FF08:00AM^000000 - ^0000FF16:00PM^000000";
			mes "^0000FF10:00AM^000000 - ^0000FF18:00PM^000000";
			mes "^0000FF12:00PM^000000 - ^0000FF20:00PM^000000";
			close;
		case 4:
			mes "^6A5ACD[Recepcionista]^000000";
			mes "Tem certeza que deseja ^0000FF" + ($@hunterarena_flag?"desligar":"ligar") + "^000000 o evento?";
			next;
			if( select("- Sim.", "- Não.") == 1 )
			{
				if( !$@hunterarena_flag )
					donpcevent "HunterArenaEvent::OnStartArena";
				else
				{
					delwaitingroom;
					donpcevent "HunterArenaEvent::OnEnd";
				}
					
				mes "^6A5ACD[Recepcionista]^000000";
				mes "Foi enviado uma sinalização para ^0000FF" + ($@hunterarena_flag?"desligar":"ligar") + "^000000 o evento!";
				close;
			}
			break;
		case 5:
			break;
	}

	mes "^6A5ACD[Recepcionista]^000000";
	mes "Muito bem, volte quando desejar trocar seus pontos por itens ou quando desejar entrar na arena!";
	close;
	
OnEnable:
	waitingroom "Aberta a Arena de Caça", 0;
	end;
	
OnDisable:
	delwaitingroom;
	end;
}

-	script	HunterArenaEvent	-1,{

// O Evento irá começar neste esquema de hora:
//
//	08:00AM - 10:00AM - 12:00PM - 14:00PM
//	16:00PM - 18:00PM - 20:00PM
//
OnMinute00:
	if( !$@hunterarena_flag && (gettime(3) == 0 || gettime(3) == 8 || gettime(3) == 10 || gettime(3) == 12 || gettime(3) == 14 || gettime(3) == 16 || gettime(3) == 18 || gettime(3) == 20) )
		donpcevent "HunterArenaEvent::OnStartArena";
	
	end;

OnStartArena:
	killmonsterall "ordeal_1-2";

	// Para desabilitar as mensagem no mapa, altere o primeiro valor para 0.
	setarray $@hunter_arena[0], 1, 82, 250, 200, 200, 200, 140, 200, 10, 1;

	// Monstros Alvos de 1 Ponto
	monster "ordeal_1-2",0,0,"Alvo de 1 Ponto",1002,40,"HunterArenaEvent::OnMobKill01";
	monster "ordeal_1-2",0,0,"Alvo de 1 Ponto",1324,2,"HunterArenaEvent::OnMobKill01";
	monster "ordeal_1-2",0,0,"Alvo de 1 Ponto",1229,40,"HunterArenaEvent::OnMobKill01";
	// Monstros Alvos de 10 Pontos
	monster "ordeal_1-2",0,0,"Alvo de 10 Pontos",1054,100,"HunterArenaEvent::OnMobKill10";
	monster "ordeal_1-2",0,0,"Alvo de 10 Pontos",1034,100,"HunterArenaEvent::OnMobKill10";
	monster "ordeal_1-2",0,0,"Alvo de 10 Pontos",1295,50,"HunterArenaEvent::OnMobKill10";
	// Monstros Alvos de 15 Pontos
	monster "ordeal_1-2",0,0,"Alvo de 15 Pontos",1111,100,"HunterArenaEvent::OnMobKill15";
	monster "ordeal_1-2",0,0,"Alvo de 15 Pontos",1152,100,"HunterArenaEvent::OnMobKill15";
	// Monstros Alvos de 20 Pontos
	monster "ordeal_1-2",0,0,"Alvo de 20 Pontos",1177,100,"HunterArenaEvent::OnMobKill20";
	monster "ordeal_1-2",0,0,"Alvo de 20 Pontos",1499,100,"HunterArenaEvent::OnMobKill20";

	// MapFlags
	setmapflag "ordeal_1-2", mf_noteleport;
	setmapflag "ordeal_1-2", mf_nomemo;
	setmapflag "ordeal_1-2", mf_nosave;
	setmapflag "ordeal_1-2", mf_nowarp;
	setmapflag "ordeal_1-2", mf_nowarpto;

	announce "[Arena de Caça]: O Portal está aberto e será fechado dentro de 5 minutos.", 8;
	donpcevent "HunterArena::OnEnable";

	set $@hunterarena_flag, 1;
	initnpctimer;
	startnpctimer;
	end;

OnTimer60000:
	announce "[Arena de Caça]: O Portal está aberto e será fechado dentro de 4 minutos.", 8;
	end;

OnTimer120000:
	announce "[Arena de Caça]: O Portal está aberto e será fechado dentro de 3 minutos.", 8;
	end;

OnTimer180000:
	announce "[Arena de Caça]: O Portal está aberto e será fechado dentro de 2 minutos.", 8;
	end;

OnTimer240000:
	announce "[Arena de Caça]: O Portal está aberto e será fechado dentro de um minuto.", 8;
	end;

OnTimer300000:
	// Monstros Alvos de 30 Pontos
	monster "ordeal_1-2",0,0,"Alvo de 30 Pontos",1412,100,"HunterArenaEvent::OnMobKill30";
	monster "ordeal_1-2",0,0,"Alvo de 30 Pontos",1410,100,"HunterArenaEvent::OnMobKill30";
	// Monstros Alvos de 50 Pontos
	monster "ordeal_1-2",0,0,"Alvo de 50 Pontos",1194,100,"HunterArenaEvent::OnMobKill50";
	monster "ordeal_1-2",0,0,"Alvo de 50 Pontos",1211,40,"HunterArenaEvent::OnMobKill50";
	// Monstros Alvos de 100 Pontos
	monster "ordeal_1-2",0,0,"Alvo de 100 Pontos",1295,200,"HunterArenaEvent::OnMobKill100";
	// Monstros Alvos de 1000 Pontos
	monster "ordeal_1-2",0,0,"Alvo de 1.000 Pontos",1039,2,"HunterArenaEvent::OnMobKill1000";
	monster "ordeal_1-2",0,0,"Alvo de 1.000 Pontos",1159,2,"HunterArenaEvent::OnMobKill1000";
	monster "ordeal_1-2",0,0,"Alvo de 1.000 Pontos",1583,2,"HunterArenaEvent::OnMobKill1000";
	monster "ordeal_1-2",0,0,"Alvo de 1.000 Pontos",1272,2,"HunterArenaEvent::OnMobKill1000";
	monster "ordeal_1-2",0,0,"Alvo de 1.000 Pontos",1373,2,"HunterArenaEvent::OnMobKill1000";
	// Monstros Alvos de 2000Pontos
	monster "ordeal_1-2",0,0,"Alvo de 2.000 Pontos",1708,1,"HunterArenaEvent::OnMobKill2000";

	announce "[Arena de Caça]: O Portal está fechado, aqueles que não tiveram oportunidade podem tentar na próxima vez!", 8;
	donpcevent "#EVCACA_timercheck::OnEnable";
	mapannounce "ordeal_1-2", "[Arena de Caça]: Vocês tem mais 5 minutos de caçada, bom proveito!", 8;
	set $@hunterarena_flag, 2;
	donpcevent "HunterArena::OnDisable";
	end;

OnTimer600000:
	mapannounce "ordeal_1-2", "[Arena de Caça]: Falta um minuto para acabar a caçada.", 8;
	end;

OnEnd:
	set .@signaled, 1;
OnTimer660000:
	mapannounce "ordeal_1-2", "[Arena de Caça]: A Caçada terminou, obrigado pela participação!", 8;
	set $@hunterarena_flag, 0;
	killmonsterall "ordeal_1-2";
	removemapflag "ordeal_1-2", mf_noteleport;
	removemapflag "ordeal_1-2", mf_nomemo;
	removemapflag "ordeal_1-2", mf_nosave;
	removemapflag "ordeal_1-2", mf_nowarp;
	removemapflag "ordeal_1-2", mf_nowarpto;
	if( !.@signaled ) end;

OnTimer670000:
	set .@signaled, 0;
	mapwarp "ordeal_1-2", "new_1-2", 99, 94;
	stopnpctimer;
	end;

OnMobKill01:
	if( $@hunterarena_flag )
	{
		set $@hunter_arena[1], $@hunter_arena[1] - 1;
		if( $@hunter_arena[0] ) mapannounce "ordeal_1-2", "[Arena de Caça]: Falta " + $@hunter_arena[1] + " alvo(s) de 1 ponto!", 8;
		set hunterarena_points, hunterarena_points + 1;
	}
	end;

OnMobKill10:
	if( $@hunterarena_flag )
	{
		set $@hunter_arena[2], $@hunter_arena[2] - 1;
		if( $@hunter_arena[0] ) mapannounce "ordeal_1-2", "[Arena de Caça]: Falta " + $@hunter_arena[2] + " alvo(s) de 10 pontos!", 8;
		set hunterarena_points, hunterarena_points + 10;
	}
	end;

OnMobKill15:
	if( $@hunterarena_flag )
	{
		set $@hunter_arena[3], $@hunter_arena[3] - 1;
		if( $@hunter_arena[0] ) mapannounce "ordeal_1-2", "[Arena de Caça]: Falta " + $@hunter_arena[3] + " alvo(s) de 15 pontos!", 8;
		set hunterarena_points, hunterarena_points + 15;
	}
	end;

OnMobKill20:
	if( $@hunterarena_flag )
	{
		set $@hunter_arena[4], $@hunter_arena[4] - 1;
		if( $@hunter_arena[0] ) mapannounce "ordeal_1-2", "[Arena de Caça]: Falta " + $@hunter_arena[4] + " alvo(s) de 20 pontos!", 8;
		set hunterarena_points, hunterarena_points + 20;
	}
	end;

OnMobKill30:
	if( $@hunterarena_flag )
	{
		set $@hunter_arena[5], $@hunter_arena[5] - 1;
		if( $@hunter_arena[0] ) mapannounce "ordeal_1-2", "[Arena de Caça]: Falta " + $@hunter_arena[5] + " alvo(s) de 30 pontos!", 8;
		set hunterarena_points, hunterarena_points + 30;
	}
	end;
	end;

OnMobKill50:
	if( $@hunterarena_flag )
	{
		set $@hunter_arena[6], $@hunter_arena[6] - 1;
		if( $@hunter_arena[0] ) mapannounce "ordeal_1-2", "[Arena de Caça]: Falta " + $@hunter_arena[6] + " alvo(s) de 50 pontos!", 8;
		set hunterarena_points, hunterarena_points + 50;
	}
	end;

OnMobKill100:
	if( $@hunterarena_flag )
	{
		set $@hunter_arena[7], $@hunter_arena[7] - 1;
		if( $@hunter_arena[0] ) mapannounce "ordeal_1-2", "[Arena de Caça]: Falta " + $@hunter_arena[7] + " alvo(s) de 100 pontos!", 8;
		set hunterarena_points, hunterarena_points + 100;
	}
	end;

OnMobKill1000:
	if( $@hunterarena_flag )
	{
		set $@hunter_arena[8], $@hunter_arena[8] - 1;
		if( $@hunter_arena[0] ) mapannounce "ordeal_1-2", "[Arena de Caça]: Falta " + $@hunter_arena[8] + " alvo(s) de 1.000 pontos!", 8;
		set hunterarena_points, hunterarena_points + 1000;
	}
	end;

OnMobKill20000:
	if( $@hunterarena_flag )
	{
		set $@hunter_arena[9], $@hunter_arena[9] - 1;
		if( $@hunter_arena[0] ) mapannounce "ordeal_1-2", "[Arena de Caça]: Falta " + $@hunter_arena[9] + " alvo(s) de 2.000 pontos!", 8;
		set hunterarena_points, hunterarena_points + 15;
	}
	end;
}

-	script	#EVCACA_timercheck	-1,{

OnEnable:
	initnpctimer;
	end;
	
OnTimer60000:
	stopnpctimer;
	if( !getmapusers("ordeal_1-2") )
		donpcevent "HunterArenaEvent::OnEnd";
	else
		initnpctimer;
	end;
}